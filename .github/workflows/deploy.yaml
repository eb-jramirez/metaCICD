name: CI/CD Matrix Deployment

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  deploy-container:
    name: Prepare Deployment Container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  deploy:
    name: Deploy Services
    runs-on: ubuntu-latest
    needs: [deploy-container]

    strategy:
      max-parallel: 1
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy Service
        run: |
          echo "Deploying service for environment ${{ matrix.env }}..."
          echo "Cluster: ${{ matrix.cluster }}"
          echo "User: ${{ matrix.user }}"
          echo "Kafka: ${{ matrix.kafka }}"
          echo "Group: ${{ matrix.group }}"
          echo "K Cluster: ${{ matrix.k_cluster }}"
          echo "Opensearch: ${{ matrix.opensearch }}"
          deployment_time=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "Deployment timestamp: $deployment_time"
          echo "Deployment timestamp: $deployment_time" >> $GITHUB_WORKSPACE/logs/deployment-${{ matrix.env }}.log

      - name: Record End Time
        if: matrix.env == 'dev'
        run: echo "::set-output name=end_time::$(date -u +%Y-%m-%dT%H:%M:%SZ)"

  generate-logs:
    name: Generate Timestamp Logs
    needs: [deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Create Logs Directory
        run: mkdir -p logs

      - name: Get Deployment Timestamps
        run: |
          for env in dev qat stg prd; do
            echo "Deployment timestamp for $env: $(date -u)" >> logs/deployment-$env.log
          done

      - name: Display Timestamps in Logs
        run: |
          echo "Logs with timestamps:"
          cat logs/*
